"""
Fix solution_images table - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á
"""
from sqlalchemy import create_engine, text
from database import DATABASE_URL

def fix_solution_images_table():
    engine = create_engine(DATABASE_URL)
    
    with engine.connect() as conn:
        print("üîß ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≤‡∏£‡∏≤‡∏á solution_images...")
        
        try:
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            result = conn.execute(text("SHOW TABLES LIKE 'solution_images'"))
            table_exists = result.fetchone() is not None
            
            if not table_exists:
                print("‚ö†Ô∏è  ‡∏ï‡∏≤‡∏£‡∏≤‡∏á solution_images ‡πÑ‡∏°‡πà‡∏°‡∏µ - ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà...")
                conn.execute(text("""
                    CREATE TABLE solution_images (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        solution_id INT NOT NULL,
                        image_path VARCHAR(255) NOT NULL,
                        image_order INT DEFAULT 0,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        FOREIGN KEY (solution_id) REFERENCES solutions(id) ON DELETE CASCADE,
                        INDEX idx_solution_id (solution_id)
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
                """))
                conn.commit()
                print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á solution_images ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")
                return
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            print("üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á...")
            result = conn.execute(text("DESCRIBE solution_images"))
            columns = {row[0]: row for row in result.fetchall()}
            print(f"   ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ: {list(columns.keys())}")
            
            if 'image_path' in columns:
                print("‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á solution_images ‡∏°‡∏µ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß!")
                return
            
            # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ image_path ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏≠‡∏∑‡πà‡∏ô ‡πÉ‡∏´‡πâ Backup ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
            print("üíæ ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤...")
            conn.execute(text("""
                CREATE TABLE IF NOT EXISTS solution_images_backup AS 
                SELECT * FROM solution_images
            """))
            conn.commit()
            
            print("üóëÔ∏è  ‡∏•‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏Å‡πà‡∏≤...")
            conn.execute(text("SET FOREIGN_KEY_CHECKS = 0"))
            conn.execute(text("DROP TABLE IF EXISTS solution_images"))
            conn.execute(text("SET FOREIGN_KEY_CHECKS = 1"))
            conn.commit()
            
            print("üÜï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà...")
            conn.execute(text("""
                CREATE TABLE solution_images (
                    id INT AUTO_INCREMENT PRIMARY KEY,
                    solution_id INT NOT NULL,
                    image_path VARCHAR(255) NOT NULL,
                    image_order INT DEFAULT 0,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    FOREIGN KEY (solution_id) REFERENCES solutions(id) ON DELETE CASCADE,
                    INDEX idx_solution_id (solution_id)
                ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
            """))
            conn.commit()
            
            print("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!")
            print("üìä ‡∏™‡∏£‡∏∏‡∏õ:")
            print("   - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á solution_images ‡πÉ‡∏´‡∏°‡πà")
            print("   - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: id, solution_id, image_path, image_order, created_at")
            print("   - ‡∏™‡∏£‡πâ‡∏≤‡∏á FOREIGN KEY constraint")
            print("   - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô: solution_images_backup")
            
        except Exception as e:
            print(f"‚ùå Error: {e}")
            raise

if __name__ == "__main__":
    try:
        fix_solution_images_table()
    except Exception as e:
        print(f"\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
