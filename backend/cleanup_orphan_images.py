"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (orphan images)
"""
import os
from pathlib import Path
from database import SessionLocal
from models import Question, SolutionImage

def cleanup_orphan_images():
    """‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß"""
    
    db = SessionLocal()
    
    try:
        # ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå uploads
        uploads_dir = Path(__file__).parent / "uploads"
        
        if not uploads_dir.exists():
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå uploads")
            return
        
        # ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        active_files = set()
        
        # 1. ‡∏£‡∏π‡∏õ‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
        questions = db.query(Question).filter(Question.question_img != None).all()
        for q in questions:
            filename = q.question_img.split('/')[-1]  # ‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
            active_files.add(filename)
        
        # 2. ‡∏£‡∏π‡∏õ‡πÄ‡∏â‡∏•‡∏¢‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
        solution_images = db.query(SolutionImage).all()
        for img in solution_images:
            filename = img.image_path.split('/')[-1]  # ‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
            active_files.add(filename)
        
        print(f"üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:")
        print(f"   - ‡∏£‡∏π‡∏õ‡πÇ‡∏à‡∏ó‡∏¢‡πå‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {len(questions)} ‡πÑ‡∏ü‡∏•‡πå")
        print(f"   - ‡∏£‡∏π‡∏õ‡πÄ‡∏â‡∏•‡∏¢‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {len(solution_images)} ‡πÑ‡∏ü‡∏•‡πå")
        print(f"   - ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(active_files)} ‡πÑ‡∏ü‡∏•‡πå")
        print()
        
        # ‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå uploads
        all_files = [f for f in uploads_dir.iterdir() if f.is_file() and f.name != '.gitkeep']
        
        print(f"üìÅ ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå uploads: {len(all_files)} ‡πÑ‡∏ü‡∏•‡πå")
        print()
        
        # ‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô orphan (‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
        orphan_files = [f for f in all_files if f.name not in active_files]
        
        if not orphan_files:
            print("‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå orphan ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏•‡πâ‡∏ß!")
            return
        
        print(f"üóëÔ∏è  ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå orphan: {len(orphan_files)} ‡πÑ‡∏ü‡∏•‡πå")
        print()
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö
        print("üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö:")
        for f in orphan_files:
            size_kb = f.stat().st_size / 1024
            print(f"   - {f.name} ({size_kb:.1f} KB)")
        print()
        
        # ‡∏ñ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
        response = input(f"‚ùì ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {len(orphan_files)} ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (yes/no): ")
        
        if response.lower() not in ['yes', 'y']:
            print("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏ö")
            return
        
        # ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå
        deleted_count = 0
        total_size = 0
        
        for f in orphan_files:
            try:
                size = f.stat().st_size
                f.unlink()
                deleted_count += 1
                total_size += size
                print(f"   ‚úÖ ‡∏•‡∏ö: {f.name}")
            except Exception as e:
                print(f"   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö {f.name}: {e}")
        
        print()
        print(f"üéâ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
        print(f"   - ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå: {deleted_count}/{len(orphan_files)} ‡πÑ‡∏ü‡∏•‡πå")
        print(f"   - ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà: {total_size / 1024:.2f} KB ({total_size / (1024*1024):.2f} MB)")
        
    finally:
        db.close()

if __name__ == "__main__":
    print("=" * 60)
    print("üßπ ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û Orphan (‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)")
    print("=" * 60)
    print()
    
    cleanup_orphan_images()
